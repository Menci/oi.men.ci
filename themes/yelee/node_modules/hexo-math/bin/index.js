// Generated by CoffeeScript 1.6.3
var Entities, assetBase, async, blockMathRegex, colors, entities, extend, file, fs, htmlTag, injectSrc, inlineMathRegex, packageInfo, path, util, warn;

extend = hexo.extend;

util = require('hexo-util');

file = require('hexo-fs');

htmlTag = util.html_tag;

async = require('async');

colors = require('colors');

fs = require('hexo-fs');

path = require('path');

Entities = require('html-entities').AllHtmlEntities;

entities = new Entities();

packageInfo = require('../package.json');

assetBase = path.resolve(__dirname, '../asset');

injectSrc = fs.readFileSync(path.resolve(assetBase, 'math-jax.ejs'));

inlineMathRegex = /\$.*\$/;

blockMathRegex = /^\s*\$\$[\s\S]*\$\$\s*$/m;

hexo.extend.filter.register("after_render:html", function(src, data) {
  var hasBlock, hasBody, hasInline, hasMath, insertPos;
  insertPos = src.indexOf("</body>");
  hasBody = insertPos >= 0;
  hasInline = inlineMathRegex.test(src);
  hasBlock = blockMathRegex.test(src);
  hasMath = src.indexOf("<!-- Has MathJax -->") >= 0 || hasInline || hasBlock;
  if (hasBody && hasMath) {
    return src.substr(0, insertPos) + injectSrc + src.substr(insertPos);
  }
  return src;
});

hexo.extend.tag.register("math", (function(args, content) {
  var result;
  content = entities.encode(content);
  if (/\n/.test(content)) {
    result = "<span>$$" + content + "$$</span><!-- Has MathJax -->";
  } else {
    result = "<span>$" + content + "$</span><!-- Has MathJax -->";
  }
  return result;
}), {
  ends: true
});

warn = function(message) {
  return console.warn("" + "WARN".yellow + " " + message);
};

hexo.extend.tag.register("math_block", (function(args, content) {
  var result;
  warn("'math_block' tag is deprecated since hexo-math 2.0. Use 'math' block instead.");
  result = "<span>$$" + content + "$$</span><!-- Has MathJax -->";
  return result;
}), {
  ends: true
});
